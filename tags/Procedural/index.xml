<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Procedural on Alejandro U. Alvarez</title><link>https://aurbano.eu/tags/Procedural/</link><description>Recent content in Procedural on Alejandro U. Alvarez</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 08 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://aurbano.eu/tags/Procedural/index.xml" rel="self" type="application/rss+xml"/><item><title>Flocking Behaviour Simulations</title><link>https://aurbano.eu/post/2020-02-15-flocking-simulation/</link><pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate><guid>https://aurbano.eu/post/2020-02-15-flocking-simulation/</guid><description>This post details my journey learning about flocking behaviours, the mathematical models behind them, and my own implementation using WebGL. You can also see the final product before you read it if you want!
I&amp;rsquo;ve always been fascinated by flocks of birds flying in the sky creating patterns like the ones you can see in this video:
Reference material for my end goal And as usual I&amp;rsquo;ve thought, how hard can it be to recreate?</description></item><item><title>Procedural Map Generation</title><link>https://aurbano.eu/post/2020-02-08-procedural-maps/</link><pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate><guid>https://aurbano.eu/post/2020-02-08-procedural-maps/</guid><description>At #socialgorithm we recently started working on a new game, let&amp;rsquo;s call it &amp;ldquo;Ant Colony&amp;rdquo; for now. It&amp;rsquo;s a bit like simplified Age of Empires, where you write the code that drives a bunch of ants, and they need to survive and ultimately be the only ones alive in the map.
We needed to generate map procedurally, which is nothing new really, but it was new to me when I started writing the code for it, so it&amp;rsquo;s been a fun opportunity to learn something new!</description></item></channel></rss>